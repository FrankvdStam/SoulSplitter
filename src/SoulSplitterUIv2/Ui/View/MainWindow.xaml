<!-- This file is part of the SoulSplitter distribution (https://github.com/FrankvdStam/SoulSplitter).
     Copyright (c) 2022 Frank van der Stam.
     https://github.com/FrankvdStam/SoulSplitter/blob/main/LICENSE
     
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, version 3.
     
     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     General Public License for more details.
     
     You should have received a copy of the GNU General Public License
     along with this program. If not, see<http://www.gnu.org/licenses/> .  -->

<Window x:Class="SoulSplitterUIv2.Ui.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:resources="clr-namespace:SoulSplitterUIv2.Resources"
    xmlns:splitControls="clr-namespace:SoulSplitterUIv2.Ui.View.SplitControls"
    xmlns:view="clr-namespace:SoulSplitterUIv2.Ui.View"
    xmlns:viewModels="clr-namespace:SoulSplitterUIv2.Ui.ViewModels"
    xmlns:converters="clr-namespace:SoulSplitterUIv2.Ui.Converters"
    xmlns:SoulMemoryEnums="clr-namespace:SoulMemory.Enums;assembly=SoulMemory"
    xmlns:ui="clr-namespace:SoulSplitterUIv2.Ui"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    Title="{Binding Version, StringFormat=SoulSplitter version {0}}"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextElement.FontWeight="Regular"
    TextElement.FontSize="13"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    Width="1200"
    Height="800"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel, IsDesignTimeCreatable=False}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Indigo" SecondaryColor="Indigo" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/SoulSplitterUIv2;component/Resources/English/Language.xaml" />
                       
                        <ResourceDictionary>
                            <converters:EnumLanguageConverter x:Key="EnumLanguageConverter" LanguageManager="{view:ServiceProviderSource Type=resources:ILanguageManager}"/>
                            <converters:EnumEventFlagConverter x:Key="EnumEventFlagConverter" LanguageManager="{view:ServiceProviderSource Type=resources:ILanguageManager}"/>
                            <converters:SplitTypeVisibilityConverter x:Key="SplitTypeVisibilityConverter"/>

                            <x:Array x:Key="EventFlagSplitTypes" Type="{x:Type SoulMemoryEnums:SplitType}">
                                <x:Static Member="SoulMemoryEnums:SplitType.Boss" />
                                <x:Static Member="SoulMemoryEnums:SplitType.Bonfire" />
                                <x:Static Member="SoulMemoryEnums:SplitType.ItemPickup" />
                                <x:Static Member="SoulMemoryEnums:SplitType.KnownFlag" />
                            </x:Array>


                            <DataTemplate DataType="{x:Type system:Enum}" x:Key="EventFlagDataTemplate">
                                <StackPanel>
                                    <TextBlock Text="{Binding ., Converter={StaticResource EnumEventFlagConverter}, ConverterParameter={x:Static converters:EnumEventFlagConverterTarget.Name}}"/>
                                    <TextBlock Text="{Binding ., Converter={StaticResource EnumEventFlagConverter}, ConverterParameter={x:Static converters:EnumEventFlagConverterTarget.NumericFlag}}"/>
                                    <TextBlock Text="{Binding ., Converter={StaticResource EnumEventFlagConverter}, ConverterParameter={x:Static converters:EnumEventFlagConverterTarget.Description}}"/>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type system:Enum}" x:Key="EnumDataTemplate">
                                <TextBlock Text="{Binding ., Converter={StaticResource EnumLanguageConverter}}"/>
                            </DataTemplate>

                            <ui:SplitTypeDataTemplateSelector
                                x:Key="SplitTypeDataTemplateSelector"
                                LanguageManager="{view:ServiceProviderSource Type=resources:ILanguageManager}"
                                EventFlagDataTemplate="{StaticResource EventFlagDataTemplate}"
                                EnumDataTemplate="{StaticResource EnumDataTemplate}"
                            />
                        </ResourceDictionary>

                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <Expander
            materialDesign:ExpanderAssist.ExpanderButtonPosition="Start"
            DockPanel.Dock="Top"
            HorizontalAlignment="Stretch"
            Header="{DynamicResource ExpanderHeaderAddSplit}"
            IsExpanded="{Binding IsAddSplitPopupOpen}">
            <Grid
                Height="400"
                IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition MinHeight="60"/>
                </Grid.RowDefinitions>
                
                <!-- Select game -->
                <splitControls:EnumListControl
                    Grid.Row="0"
                    EnumType="SoulMemoryEnums:Game"
                    SelectedValue="{Binding SelectedGame}"
                    Hint="Game"/>

                <!-- Select NG+ level -->
                <ComboBox
                    Grid.Row="1"
                    Margin="5"
                    materialDesign:HintAssist.HelperText="New game level"
                    Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                    SelectedValue="{Binding SelectedNewGamePlusLevel}"
                    ItemsSource="{Binding NewGamePlusLevels}"/>

                <!-- Select timing type -->
                <splitControls:EnumListControl
                    Grid.Row="2"
                    IsEnabled="{Binding IsGameSelected}"
                    ItemsSource="{Binding TimingTypes}"
                    SelectedValue="{Binding SelectedTimingType}"
                    Hint="Timing"/>

                <!-- Select split type -->
                <splitControls:EnumListControl
                    Grid.Row="3"
                    IsEnabled="{Binding IsGameSelected}"
                    ItemsSource="{Binding SplitTypes}"
                    SelectedValue="{Binding SelectedSplitType}"
                    Hint="Type"/>

                <!-- split types ============================================================================================================= -->

                <!-- Event flags -->
                <splitControls:EventFlagListControl
                    Grid.Row="4"
                    Visibility="{Binding SelectedSplitType, Converter={StaticResource SplitTypeVisibilityConverter}, ConverterParameter={StaticResource EventFlagSplitTypes}}"
                    LanguageManager="{view:ServiceProviderSource Type=resources:ILanguageManager}"
                    EventFlagType="{Binding SelectedEventFlagType}"
                    SelectedEventFlag="{Binding SelectedEventFlag, Mode=TwoWay}"
                    Hint="Split"/>


                <!-- ============================================================================================================= -->


                <!-- Optional description -->
                <TextBox
                    Grid.Row="5"
                    Margin="5"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                    materialDesign:HintAssist.Hint="Description"
                    Text="{Binding SplitDescription}"/>

                <!-- Add button -->
                <Button
                    Grid.Row="6"
                    Margin="5, 15, 5, 5"
                    Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                    ToolTip="{DynamicResource ButtonToolTipAddSplit}"
                    HorizontalAlignment="Left"
                    Command="{Binding AddSplitCommand}">
                    <materialDesign:PackIcon
                        Kind="Plus"
                        Height="30"
                        Width="30" />
                </Button>
            </Grid>
        </Expander>

        <!-- active splits -->
        <DataGrid
            ItemsSource="{Binding Splits}"
            IsReadOnly="True"
            AutoGenerateColumns="False"
            VerticalScrollBarVisibility="Visible"
            ui:DataGridDragAndDropHelper.EnableRowReordering="True">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Game" Binding="{Binding Game, Converter={StaticResource EnumLanguageConverter}}"/>
                <DataGridTextColumn Header="NG+" Binding="{Binding NewGamePlusLevel}"/>
                <DataGridTextColumn Header="Timing" Binding="{Binding TimingType, Converter={StaticResource EnumLanguageConverter}}"/>
                <DataGridTextColumn Header="Type" Binding="{Binding SplitType, Converter={StaticResource EnumLanguageConverter}}"/>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl 
                                ContentTemplateSelector="{StaticResource SplitTypeDataTemplateSelector}"
                                Content="{Binding Split}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
            </DataGrid.Columns>

        </DataGrid>

        <!--
        <splitControls:SplitsList
            Splits="{Binding Splits}"/>
        -->

    </DockPanel>
</Window>