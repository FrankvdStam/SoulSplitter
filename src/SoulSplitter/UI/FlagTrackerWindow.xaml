<Window x:Class="SoulSplitter.UI.FlagTrackerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:ui="clr-namespace:SoulSplitter.UI"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:generic="clr-namespace:SoulSplitter.UI.Generic" 
        xmlns:converters="clr-namespace:SoulSplitter.UI.Converters"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:validation="clr-namespace:SoulSplitter.UI.Validation"
        mc:Ignorable="d"
        Title="Event Flag Tracker"
        Width="{Binding WindowWidth, Mode=TwoWay}"
        Height="{Binding WindowHeight, Mode=TwoWay}"
        d:DataContext="{d:DesignInstance generic:FlagTrackerViewModel, IsDesignTimeCreatable=True}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- Material design -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/materialdesigncolor.indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.indigo.xaml" />

                <ResourceDictionary>
                    <converters:SplitObjectToDescriptionConverter x:Key="SplitObjectToDescriptionConverter"/>

                    <system:Int32 x:Key="InputCategory" >0</system:Int32>
                    <system:Int32 x:Key="InputFlag"     >1</system:Int32>
                    <system:Int32 x:Key="InputButtons"  >2</system:Int32>
                    <system:Int32 x:Key="InputFlags"    >3</system:Int32>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding InputColumnWidth, Mode=TwoWay}"/>
            <ColumnDefinition Width="5"/> <!-- Splitter column -->
            <ColumnDefinition Width="{Binding UiCustomizationColumnWidth, Mode=TwoWay}"/>
            <ColumnDefinition Width="5"/> <!-- Splitter column -->
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Split between flag input & UI custimization  -->
        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="4" Width="5" HorizontalAlignment="Stretch" />

        <!-- Split between UI custimization & percentages -->
        <GridSplitter Grid.Column="3" Grid.Row="0" Grid.RowSpan="4" Width="5" HorizontalAlignment="Stretch" />

        <!-- Event flag input column  ============================================================================================================================== -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            


            <!-- Category Description-->
            <TextBox 
            Grid.Column="0"
            Grid.Row="{StaticResource InputCategory}"
            Width="415"
            Margin="5"
            HorizontalAlignment="Left"
            ToolTip="Name of the category"
            materialDesign:HintAssist.Hint="Flag category"
            Text="{Binding CategoryName}"/>

            <!-- Flag -->
            <generic:FlagControl Grid.Column="0" Grid.Row="{StaticResource InputFlag}"/>

            <!-- Add/Remove Buttons -->
            <StackPanel 
            Grid.Column="0" 
            Grid.Row="{StaticResource InputButtons}"
            Orientation="Horizontal"
            >
                <Button
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                ToolTip="Add a split"
                Command="{Binding CommandAddEventFlag}">
                    <materialDesign:PackIcon
                    Kind="Plus"
                    Height="30"
                    Width="30" />
                </Button>

                <Button
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                ToolTip="Remove selected split"
                Command="{Binding CommandRemoveEventFlag}">
                    <materialDesign:PackIcon
                    Kind="Close"
                    Height="30"
                    Width="30" />
                </Button>
            </StackPanel>

            <!-- List of flags -->
            <TreeView
            Grid.Column="0"
            Grid.Row="{StaticResource InputFlags}"
            ItemsSource="{Binding EventFlagCategories}"
            SelectedItemChanged="TreeView_SelectedItemChanged"
            >
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type generic:FlagTrackerCategoryViewModel}" ItemsSource="{Binding EventFlags}">
                        <TextBlock Text="{Binding CategoryName}"/>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type generic:FlagDescription}">
                        <TextBlock Text="{Binding Path=.}" Tag="{Binding State}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Background" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
        </Grid>

        <!-- UI Customization column ============================================================================================================================== -->
        <Grid
            Grid.Column="2" 
            Grid.RowSpan="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="210"/>
                <RowDefinition Height="35" />
                <RowDefinition Height="210"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            
            <Label
                Grid.Row="0"
                Content="Background" VerticalAlignment="Bottom"/>
            
            <materialDesign:ColorPicker 
                Grid.Row="1"
                Margin="5"
                Color="{Binding BackgroundColor}" 
                Width="200" 
                Height="200" 
                HorizontalAlignment="Left"/>

            <Label 
                Grid.Row="2"
                Content="Foreground" 
                Margin="5"/>
            
            <materialDesign:ColorPicker
                Grid.Row="3"
                Margin="5" 
                Color="{Binding ForegroundColor}" 
                Width="200" 
                Height="200" 
                HorizontalAlignment="Left"/>

            <TextBox 
                Grid.Row="4"
                ToolTip="Total percentage font size">
                <TextBox.Text>
                    <Binding Path="TotalPercentageFontSize">
                        <Binding.ValidationRules>
                            <validation:TextToNumberValidation NumericType="Int" IsRequired="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox 
                Grid.Row="5"
                ToolTip="Total percentage font size">
                <TextBox.Text>
                    <Binding Path="CategoryPercentageFontSize">
                        <Binding.ValidationRules>
                            <validation:TextToNumberValidation NumericType="Int" IsRequired="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>

        <!-- Percentages column ============================================================================================================================== -->
        <Grid
            Grid.Column="4" 
            Grid.RowSpan="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding CategoryPercentagesRowHeight, Mode=TwoWay}"/>
                <RowDefinition Height="5"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ItemsControl
                ItemsSource="{Binding EventFlagCategories}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>
                            <TextBlock  FontSize="{Binding CategoryPercentageFontSize}" Text="{Binding CategoryName}" />
                            <TextBlock  Grid.Column="1" FontSize="{Binding CategoryPercentageFontSize}" Text="{Binding PercentageDone, StringFormat={}{0:#0.0'%'}}" />
                            <ProgressBar Grid.Column="2" Minimum="0" Maximum="100" Value="{Binding PercentageDone}" />
                            
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" />

            <TextBlock
                Grid.Row="2"
                FontSize="{Binding TotalPercentageFontSize}"
                Text="{Binding PercentageDone, StringFormat={}{0:#0.0'%'}}"/>
        </Grid>
    </Grid>
</Window>
