<!-- This file is part of the SoulSplitter distribution (https://github.com/FrankvdStam/SoulSplitter).
     Copyright (c) 2022 Frank van der Stam.
     https://github.com/FrankvdStam/SoulSplitter/blob/main/LICENSE
     
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, version 3.
     
     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     General Public License for more details.
     
     You should have received a copy of the GNU General Public License
     along with this program. If not, see<http://www.gnu.org/licenses/> .  -->
    
<UserControl x:Class="SoulSplitter.UI.Sekiro.SekiroControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="clr-namespace:SoulSplitter.UI"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:sekiro="clr-namespace:SoulSplitter.UI.Sekiro"
             xmlns:converters="clr-namespace:SoulSplitter.UI.Converters"
             xmlns:generic="clr-namespace:SoulSplitter.UI.Generic"
             xmlns:sekiro2="clr-namespace:SoulMemory.Sekiro;assembly=SoulMemory"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance sekiro:SekiroViewModel, IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- Material design -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/materialdesigncolor.indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.indigo.xaml" />


                <ResourceDictionary>

                    <CollectionViewSource Source="{Binding Idols}" x:Key="IdolsCollectionViewSource">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Area"/>
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>

                    <converters:BoolToVisibilityConverter         x:Key="BoolToVisibilityConverter"/>
                    <converters:SplitTypeVisibilityConverter      x:Key="SplitTypeVisibilityConverter"/>


                    <!-- Grid row definitions -->
                    <system:Int32 x:Key="StartAutomaticallyRow" >0</system:Int32>
                    <system:Int32 x:Key="LockTimerRow"          >1</system:Int32>
                    <system:Int32 x:Key="SeparatorRow"          >2</system:Int32>
                    <system:Int32 x:Key="SplitDefinitionRow"    >3</system:Int32>
                    <system:Int32 x:Key="SplitTypeRow"          >4</system:Int32>
                    <system:Int32 x:Key="AddRemoveSplitRow"     >5</system:Int32>
                    <system:Int32 x:Key="SplitsTreeRow"         >6</system:Int32>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- row ============================================================================================================================================================================================== -->
        <CheckBox 
            Grid.Row="{StaticResource StartAutomaticallyRow}"
            Margin="5" 
            Content="Start automatically" 
            IsChecked="{Binding StartAutomatically}"/>

        <!-- row ============================================================================================================================================================================================== -->
        <CheckBox
            Grid.Row="{StaticResource LockTimerRow}"
            Margin="5"
            Content="Overwrite IGT with 0:00 when the timer starts (for NG+ saves/mortal journey)"
            IsChecked="{Binding OverwriteIgtOnStart}"/>

        <!-- row ============================================================================================================================================================================================== -->
        <Label 
            Grid.Row="{StaticResource SeparatorRow}" 
            Content="Automatic splitting"/>

        <Separator 
            Grid.Row="{StaticResource SeparatorRow}" />

        <!-- row ============================================================================================================================================================================================== -->
        <!-- timing type -->
        <ComboBox
            Grid.Row="{StaticResource SplitDefinitionRow}"
            Margin="5"
            HorizontalAlignment="Left"
            Width="205"
            Height="30"
            SelectedValuePath="Tag"
            SelectedValue="{Binding NewSplitTimingType}"
            materialDesign:HintAssist.HelperText="when">

            <ComboBoxItem Content="immediately when">
                <ComboBoxItem.Tag>
                    <generic:TimingType>Immediate</generic:TimingType>
                </ComboBoxItem.Tag>
            </ComboBoxItem>
            <ComboBoxItem Content="when the game is loading after">
                <ComboBoxItem.Tag>
                    <generic:TimingType>OnLoading</generic:TimingType>
                </ComboBoxItem.Tag>
            </ComboBoxItem>
        </ComboBox>

        <!-- split type -->
        <ComboBox
            Grid.Row="{StaticResource SplitDefinitionRow}"
            Margin="215, 5, 5, 5"
            HorizontalAlignment="Left"
            Width="205"
            Height="30"
            SelectedValuePath="Tag"
            SelectedValue="{Binding NewSplitType}"
            materialDesign:HintAssist.HelperText="what"
            IsEnabled="{Binding NewSplitEnabledSplitType}">

            <ComboBoxItem Content="I kill a boss">
                <ComboBoxItem.Tag>
                    <generic:SplitType>Boss</generic:SplitType>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="I unlock an idol">
                <ComboBoxItem.Tag>
                    <generic:SplitType>Bonfire</generic:SplitType>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="I reach a position">
                <ComboBoxItem.Tag>
                    <generic:SplitType>Position</generic:SplitType>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="I trigger a flag">
                <ComboBoxItem.Tag>
                    <generic:SplitType>Flag</generic:SplitType>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="I get an attribute">
                <ComboBoxItem.Tag>
                    <generic:SplitType>Attribute</generic:SplitType>
                </ComboBoxItem.Tag>
            </ComboBoxItem>
        </ComboBox>

        <!-- row ============================================================================================================================================================================================== -->
        <!-- Boss -->
        <generic:FilteredComboBox
            Grid.Row="{StaticResource SplitTypeRow}"
            Grid.Column="0"
            Margin="5"
            Width="420"
            Height="30"
            HorizontalAlignment="Left"
            ItemsSource="{Binding Bosses}" 
            SelectedValue="{Binding NewSplitValue}"
            materialDesign:HintAssist.HelperText="which"
            Visibility="{Binding NewSplitType, Converter={StaticResource SplitTypeVisibilityConverter}, ConverterParameter=Boss}"
            DisplayMemberPath="Name"
            SelectedValuePath="Value"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
            IsEditable="True" 
            IsTextSearchEnabled="False" 
            StaysOpenOnEdit="True"/>

        <!-- Idol -->
        <generic:FilteredComboBox
            Grid.Row="{StaticResource SplitTypeRow}"
            Width="420"
            Margin="5"
            HorizontalAlignment="Left"
            ItemsSource="{Binding Source={StaticResource IdolsCollectionViewSource}}" 
            SelectedValue="{Binding NewSplitValue}"
            materialDesign:HintAssist.HelperText="which"
            Visibility="{Binding NewSplitType, Converter={StaticResource SplitTypeVisibilityConverter}, ConverterParameter=Bonfire}"
            DisplayMemberPath="Name"
            SelectedValuePath="Value"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
            IsEditable="True" 
            IsTextSearchEnabled="False" 
            StaysOpenOnEdit="True">
            <ComboBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Height="30" Background="{StaticResource SecondaryHueMidBrush}" TextAlignment="Center" FontSize="16" FontWeight="Bold" Text="{Binding Name}"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ComboBox.GroupStyle>
        </generic:FilteredComboBox>

        <!-- Position -->
        <generic:PositionControl
            Margin="5,0,0,0"
            Visibility="{Binding NewSplitType, Converter={StaticResource SplitTypeVisibilityConverter}, ConverterParameter=Position}"
            Grid.Row="{StaticResource SplitTypeRow}"
            Grid.Column="0"/>

        <!-- Attribute -->

        <StackPanel 
            Orientation="Horizontal"
            Grid.Row="{StaticResource SplitTypeRow}"
            Visibility="{Binding NewSplitType, Converter={StaticResource SplitTypeVisibilityConverter}, ConverterParameter=Attribute}">

            <ComboBox
                Margin="5, 5, 5, 5"
                Width="200"
                SelectedValue="{Binding NewSplitValue.AttributeType}"
                materialDesign:HintAssist.HelperText="which"
                Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                SelectedValuePath="Tag"
                IsEditable="True" 
                IsTextSearchEnabled="False" 
                StaysOpenOnEdit="True">

                <ComboBoxItem Content="Vitality">
                    <ComboBoxItem.Tag>
                        <sekiro2:Attribute>Vitality</sekiro2:Attribute>
                    </ComboBoxItem.Tag>
                </ComboBoxItem>

                <ComboBoxItem Content="Attack power">
                    <ComboBoxItem.Tag>
                        <sekiro2:Attribute>AttackPower</sekiro2:Attribute>
                    </ComboBoxItem.Tag>
                </ComboBoxItem>
            </ComboBox>

            <TextBox
                Margin="5, 5, 5, 5"
                Width="200"
                materialDesign:HintAssist.HelperText="Level"
                Text="{Binding NewSplitValue.Level}"
            />
        </StackPanel>

<!-- Flag -->
        <generic:FlagControl
            Grid.Row="{StaticResource SplitTypeRow}"
            Visibility="{Binding NewSplitType, Converter={StaticResource SplitTypeVisibilityConverter}, ConverterParameter=Flag}"/>

        <!-- row ============================================================================================================================================================================================== -->
        <generic:AddRemoveSplits Grid.Row="{StaticResource AddRemoveSplitRow}"/>

        <!-- row ============================================================================================================================================================================================== -->
        <generic:SplitsTree 
            SplitsViewModel="{Binding SplitsViewModel}" 
            Grid.Row="{StaticResource SplitsTreeRow}" />

        <!-- row ============================================================================================================================================================================================== -->


    </Grid>
</UserControl>
