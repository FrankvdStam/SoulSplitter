<!-- This file is part of the SoulSplitter distribution (https://github.com/FrankvdStam/SoulSplitter).
     Copyright (c) 2022 Frank van der Stam.
     https://github.com/FrankvdStam/SoulSplitter/blob/main/LICENSE
     
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, version 3.
     
     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     General Public License for more details.
     
     You should have received a copy of the GNU General Public License
     along with this program. If not, see<http://www.gnu.org/licenses/> .  -->

<Window x:Class="SoulSplitter.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ui="clr-namespace:SoulSplitter.UI"
        mc:Ignorable="d"
        xmlns:darkSouls1="clr-namespace:SoulSplitter.UI.DarkSouls1"
        xmlns:darkSouls2="clr-namespace:SoulSplitter.UI.DarkSouls2"
        xmlns:eldenRing="clr-namespace:SoulSplitter.UI.EldenRing"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:darkSouls3="clr-namespace:SoulSplitter.UI.DarkSouls3"
        xmlns:sekiro="clr-namespace:SoulSplitter.UI.Sekiro"
        xmlns:converters="clr-namespace:SoulSplitter.UI.Converters"
        xmlns:uIv2="clr-namespace:SoulSplitter.UIv2"
        Title="{Binding Version, StringFormat=SoulSplitter version {0}}"
        Icon="../soulsplitter.ico"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- Material design -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/materialdesigncolor.indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.indigo.xaml" />

                <ResourceDictionary>
                    <converters:GameToSelectedIndexConverter x:Key="GameToSelectedIndexConverter"/>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <ui:MainViewModel/>
    </Window.DataContext>

    <Grid 
        Background="White" 
          >
<!-- 
        
        Height="{Binding ElementName=Window, Path=ActualHeight}"
        Width="{Binding ElementName=Window, Path=ActualWidth}"  
        -->

        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <materialDesign:ColorZone
            Mode="PrimaryMid"
            materialDesign:ElevationAssist.Elevation="Dp4">
            <ToolBar
                ToolBarTray.IsLocked="True"
                ClipToBounds="False"
                Foreground="White"
                Background="{DynamicResource PrimaryHueMidBrush}">
                <Menu
                    Foreground="White">
                    <MenuItem
                        Header="File"
                        Background="{DynamicResource PrimaryHueMidBrush}">
                        <MenuItem 
                            Background="{DynamicResource PrimaryHueMidBrush}"
                            Header="Import settings" 
                            Command="{Binding CommandImportSettingsFromFile}"
                            Icon="{materialDesign:PackIcon Kind=FolderOpen}" 
                            ToolTip="Import soulsplitter settings from file"/>

                        <MenuItem 
                            Background="{DynamicResource PrimaryHueMidBrush}"
                            Header="Export settings"
                            Command="{Binding CommandExportSettingsFromFile}"
                            Icon="{materialDesign:PackIcon Kind=ContentSave}" 
                            ToolTip="Export soulsplitter settings to file"/>
                    </MenuItem>
                </Menu>

                <Button
                    Foreground="White"
                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                    FontWeight="Normal"
                    FontSize="15"
                    Content="Help" 
                    Command="{Binding CommandTroubleShooting}"
                    ToolTip="Open help page"/>

                <materialDesign:Badged
                    BadgePlacementMode="Right"
                    BadgeBackground="{Binding BadgeBackgroundBrush}"
                    BadgeForeground="{Binding BadgeForegroundBrush}"
                    Badge="{Binding ErrorCount}"
                    ToolBar.OverflowMode="Never">
                    <Button
                        Foreground="White"
                        Content="Errors"
                        FontWeight="Normal"
                        FontSize="15"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="Show error window" 
                        Command="{Binding CommandShowErrors}"/>
                </materialDesign:Badged>

                <Menu
                    Padding="3,0,0,0"
                    Foreground="White">
                    <MenuItem 
                        
                        Header="Tools"
                        Background="{DynamicResource PrimaryHueMidBrush}">
                        <MenuItem 
                            Header="Event flag tracker" 
                            Command="{Binding CommandOpenFlagTrackerWindow}"
                            Icon="{materialDesign:PackIcon Kind=OrderBoolAscendingVariant}"
                            ToolTip="Track event flag completion and translate it to a percentage. Stream friendly"/>
                        <MenuItem
                            Header="Event flag logger" 
                            Command="{Binding CommandRunEventFlagLogger}"
                            Icon="{materialDesign:PackIcon Kind=Console}"
                            ToolTip="Open the event flag logger"/>
                    </MenuItem>
                </Menu>
                
                <!--
                <Button
                    DockPanel.Dock="Right"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Margin="1"
                    Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                    ToolTip="Add bogus error for testing"
                    Width="25"
                    Height="25"
                    Command="{Binding CommandAddError}">
                    <materialDesign:PackIcon Kind="Plus"/>
                </Button>
                -->
            </ToolBar>
        </materialDesign:ColorZone>

        <TabControl 
            materialDesign:ColorZoneAssist.Mode="PrimaryLight"
            Style="{StaticResource MaterialDesignFilledTabControl}"
            Grid.Row="1"
            SelectedIndex="{Binding SelectedGame, Converter={StaticResource GameToSelectedIndexConverter}}">
       
            <TabItem Header ="Dark Souls 1">
                
<!--
                    <uIv2:SplitSettingsControl
                        Game="DarkSouls1"
                        BooleanFlags="{Binding DarkSouls1ViewModel.BooleanFlags}"
                        TimingTypes="{Binding DarkSouls1ViewModel.TimingTypes}"
                        SplitTypes="{Binding DarkSouls1ViewModel.SplitTypes}"
                        Bosses="{Binding DarkSouls1ViewModel.Bosses}"
                        Attributes="{Binding DarkSouls1ViewModel.Attributes}"
                        Bonfires="{Binding DarkSouls1ViewModel.Bonfires}"
                        Items="{Binding DarkSouls1ViewModel.Items}"
                        GamePosition="{Binding DarkSouls1ViewModel.CurrentPosition}"
                        SplitsViewModel="{Binding DarkSouls1ViewModel.SplitsViewModel}"
                        AddSplit="{Binding DarkSouls1ViewModel.AddSplitCommand}"
                        >
                    </uIv2:SplitSettingsControl>
-->
                    <darkSouls1:DarkSouls1Control DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=DataContext.DarkSouls1ViewModel}"/>

                
            </TabItem>

            <TabItem Header ="Dark Souls 2">
                <darkSouls2:DarkSouls2Control DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=DataContext.DarkSouls2ViewModel}"/>
            </TabItem>

            <TabItem Header ="Dark Souls 3" >
                <darkSouls3:DarkSouls3Control DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=DataContext.DarkSouls3ViewModel}"/>
            </TabItem>

            <TabItem Header="Sekiro">
                <sekiro:SekiroControl DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=DataContext.SekiroViewModel}"/>
            </TabItem>

            <TabItem Header="Elden Ring">
                <eldenRing:EldenRingControl DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=DataContext.EldenRingViewModel}"/>
            </TabItem>

            <TabItem Header="Armored Core">
                <uIv2:SplitSettingsControl
                    Game="ArmoredCore6"
                    TimingTypes="{Binding ArmoredCore6ViewModel.TimingTypes}"
                    SplitTypes="{Binding ArmoredCore6ViewModel.SplitTypes}"
                    AddSplit="{Binding ArmoredCore6ViewModel.AddSplitCommand}"
                    RemoveSplit="{Binding ArmoredCore6ViewModel.RemoveSplitCommand}"
                    SplitsViewModel="{Binding ArmoredCore6ViewModel.SplitsViewModel}"
                    />
            </TabItem>

            <!--
            <TabItem Header="Event flags">
                <eventFlags:EventFlagControl/>
            </TabItem>
            -->
        </TabControl>
    </Grid>
</Window>
