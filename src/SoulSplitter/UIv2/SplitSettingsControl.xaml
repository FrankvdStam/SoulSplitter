<UserControl x:Class="SoulSplitter.UIv2.SplitSettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SoulSplitter.UIv2"
             xmlns:generic="clr-namespace:SoulSplitter.UI.Generic"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:SoulSplitter.UI.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:darkSouls1="clr-namespace:SoulMemory.DarkSouls1;assembly=SoulMemory"
             xmlns:validation="clr-namespace:SoulSplitter.UI.Validation"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- Material design -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/materialdesigncolor.indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.indigo.xaml" />

                <ResourceDictionary>
                    <converters:EnumDisplayNameConverter          x:Key="EnumDisplayNameConverter"/>
                    <converters:SplitObjectToDescriptionConverter x:Key="SplitObjectToDescriptionConverter"/>
                    <converters:EnumToVisibilityConverter         x:Key="EnumToVisibilityConverter"/>

                    <system:Int32 x:Key="BooleanFlags"          >0</system:Int32>
                    <system:Int32 x:Key="RowLabel"              >1</system:Int32>
                    <system:Int32 x:Key="RowSeparator"          >2</system:Int32>
                    <system:Int32 x:Key="RowSplitDefinition"    >3</system:Int32>
                    <system:Int32 x:Key="RowSplitType"          >4</system:Int32>
                    <system:Int32 x:Key="RowAddRemoveSplit"     >5</system:Int32>
                    <system:Int32 x:Key="RowSplitsTree"         >6</system:Int32>

                    <CollectionViewSource Source="{Binding Bonfires, RelativeSource={RelativeSource AncestorType=UserControl}}" x:Key="BonfiresCollectionViewSource">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Area"/>
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>

                    <CollectionViewSource Source="{Binding Items, RelativeSource={RelativeSource AncestorType=UserControl}}" x:Key="ItemsCollectionViewSource">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Area"/>
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition MinHeight="60" Height="*"/>
            <RowDefinition MinHeight="20" Height="*"/>
            <RowDefinition MinHeight="20" Height="*"/>
            <RowDefinition MinHeight="50" Height="*"/>
            <RowDefinition MinHeight="50" Height="*"/>
            <RowDefinition MinHeight="50" Height="*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        
        <ItemsControl
            Grid.Row="{StaticResource BooleanFlags}"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch"
            ItemsSource="{Binding BooleanFlags, RelativeSource={RelativeSource AncestorType=UserControl}}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <CheckBox
                        Margin="5"
                        Content="{Binding Description}"
                        IsChecked="{Binding Value}"
                    />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>


        <!-- row ============================================================================================================================================================================================== -->
        <Label 
            Grid.Row="{StaticResource RowLabel}" 
            Grid.Column="0"
            Content="Automatic splitting"/>

        <!-- row ============================================================================================================================================================================================== -->
        <Separator 
            Grid.Row="{StaticResource RowSeparator}"
            Grid.Column="0"
            Grid.ColumnSpan="2"/>


        <!-- row ============================================================================================================================================================================================== -->
        <ComboBox
            Grid.Row="{StaticResource RowSplitDefinition}"
            Grid.Column="0"
            Margin="5"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch"
            materialDesign:HintAssist.HelperText="when"
            ItemsSource="{Binding TimingTypes, RelativeSource={RelativeSource AncestorType=UserControl}}"
            SelectedValue="{Binding SelectedTimingType, RelativeSource={RelativeSource AncestorType=UserControl}}"
            SelectedValuePath="Value"
            DisplayMemberPath="Name"
            />

        <ComboBox
            Grid.Row="{StaticResource RowSplitDefinition}"
            Grid.Column="1"
            Margin="5"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch"
            materialDesign:HintAssist.HelperText="when"
            ItemsSource="{Binding SplitTypes, RelativeSource={RelativeSource AncestorType=UserControl}}"
            SelectedValue="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}}"
            SelectedValuePath="Value"
            DisplayMemberPath="Name"
            />

        <!-- row ============================================================================================================================================================================================== -->

        <!-- Boss ============================================================================================================================================================================================== -->
        <generic:FilteredComboBox
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ItemsSource="{Binding Bosses, RelativeSource={RelativeSource AncestorType=UserControl}}"
            materialDesign:HintAssist.HelperText="which"
            Visibility="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static generic:SplitType.Boss}}"
            DisplayMemberPath="Name"
            SelectedValuePath="Value"
            SelectedValue="{Binding SelectedBoss, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
            IsEditable="True"
            IsTextSearchEnabled="False"
            StaysOpenOnEdit="True"/>

        <!-- Preset Flag ============================================================================================================================================================================================== -->
        <generic:FilteredComboBox
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ItemsSource="{Binding PresetFlagsDependencyProperty, RelativeSource={RelativeSource AncestorType=UserControl}}"
            materialDesign:HintAssist.HelperText="what flag?"
            Visibility="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static generic:SplitType.PresetFlag}}"
            DisplayMemberPath="Name"
            SelectedValuePath="Value"
            SelectedValue="{Binding SelectedPresetFlag, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
            IsEditable="True"
            IsTextSearchEnabled="False"
            StaysOpenOnEdit="True" />

        <!-- Attributes ============================================================================================================================================================================================== -->
        <ComboBox
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="0"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            materialDesign:HintAssist.HelperText="when"
            Visibility="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static generic:SplitType.Attribute}}"
            ItemsSource="{Binding Attributes, RelativeSource={RelativeSource AncestorType=UserControl}}"
            SelectedValue="{Binding SelectedAttribute, RelativeSource={RelativeSource AncestorType=UserControl}}"
            SelectedValuePath="Value"
            DisplayMemberPath="Name"
            />

        <TextBox
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="1"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static generic:SplitType.Attribute}}"
            materialDesign:HintAssist.HelperText="Level">
            <TextBox.Text>
                <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="AttributeLevel">
                    <Binding.ValidationRules>
                        <validation:TextToNumberValidation NumericType="Int" IsRequired="True" AllowNegative="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>


        <!-- Dark souls 1 bonfire ============================================================================================================================================================================================== -->
        <generic:FilteredComboBox
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="0"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ItemsSource="{Binding Source={StaticResource BonfiresCollectionViewSource}}" 
            materialDesign:HintAssist.HelperText="which"
            DisplayMemberPath="Name"
            SelectedValuePath="Value"
            SelectedValue="{Binding SelectedBonfire, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
            IsEditable="True" 
            IsTextSearchEnabled="False" 
            StaysOpenOnEdit="True">
            <ComboBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Height="30" Background="{StaticResource SecondaryHueMidBrush}" TextAlignment="Center" FontSize="16" FontWeight="Bold" Text="{Binding Name}"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ComboBox.GroupStyle>
            <ComboBox.Visibility>
                <MultiBinding Converter="{StaticResource EnumToVisibilityConverter}">
                    <MultiBinding.ConverterParameter>
                        <x:Array Type="{x:Type system:Enum}">
                            <generic:SplitType>Bonfire</generic:SplitType>
                            <generic:Game>DarkSouls1</generic:Game>
                        </x:Array>
                    </MultiBinding.ConverterParameter>
                    <Binding Path="SelectedSplitType"   RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                    <Binding Path="Game"                RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                </MultiBinding>
            </ComboBox.Visibility>
        </generic:FilteredComboBox>

        <ComboBox
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="1"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            SelectedValuePath="Tag"
            SelectedValue="{Binding SelectedBonfireState, RelativeSource={RelativeSource AncestorType=UserControl}}"
            materialDesign:HintAssist.HelperText="bonfire state"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
            IsEditable="True" 
            IsTextSearchEnabled="False" 
            StaysOpenOnEdit="True">
            <ComboBox.Visibility>
                <MultiBinding Converter="{StaticResource EnumToVisibilityConverter}">
                    <MultiBinding.ConverterParameter>
                        <x:Array Type="{x:Type system:Enum}">
                            <generic:SplitType>Bonfire</generic:SplitType>
                            <generic:Game>DarkSouls1</generic:Game>
                        </x:Array>
                    </MultiBinding.ConverterParameter>
                    <Binding Path="SelectedSplitType"   RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                    <Binding Path="Game"                RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                </MultiBinding>
            </ComboBox.Visibility>

            <ComboBoxItem Content="Not discovered">
                <ComboBoxItem.Tag>
                    <darkSouls1:BonfireState>Unknown</darkSouls1:BonfireState>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="Discovered">
                <ComboBoxItem.Tag>
                    <darkSouls1:BonfireState>Discovered</darkSouls1:BonfireState>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="Unlocked">
                <ComboBoxItem.Tag>
                    <darkSouls1:BonfireState>Unlocked</darkSouls1:BonfireState>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="Kindled 1">
                <ComboBoxItem.Tag>
                    <darkSouls1:BonfireState>Kindled1</darkSouls1:BonfireState>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="Kindled 2">
                <ComboBoxItem.Tag>
                    <darkSouls1:BonfireState>Kindled2</darkSouls1:BonfireState>
                </ComboBoxItem.Tag>
            </ComboBoxItem>

            <ComboBoxItem Content="Kindled 3">
                <ComboBoxItem.Tag>
                    <darkSouls1:BonfireState>Kindled3</darkSouls1:BonfireState>
                </ComboBoxItem.Tag>
            </ComboBoxItem>
        </ComboBox>

        <!-- Dark souls 1 item ============================================================================================================================================================================================== -->
        <generic:FilteredComboBox
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static generic:SplitType.Item}}"
            ItemsSource="{Binding Source={StaticResource ItemsCollectionViewSource}}" 
            DisplayMemberPath="Name"
            SelectedValuePath="Value"
            SelectedValue="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=UserControl}}"
            materialDesign:HintAssist.HelperText="which"
            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
            IsEditable="True" 
            IsTextSearchEnabled="False" 
            StaysOpenOnEdit="True">
            <ComboBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Height="30" Background="{StaticResource SecondaryHueMidBrush}" TextAlignment="Center" FontSize="16" FontWeight="Bold" Text="{Binding Name}"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ComboBox.GroupStyle>
        </generic:FilteredComboBox>

        <!-- Simple position ============================================================================================================================================================================================== -->
        <Grid
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Visibility="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static generic:SplitType.Position}}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition MinWidth="60" Width="1*"/>
            </Grid.ColumnDefinitions>

            <TextBox 
                Margin="5"
                Grid.Column="0"
                materialDesign:HintAssist.Hint="X"
                materialDesign:HintAssist.HelperText="{Binding GamePosition.X, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <TextBox.Text>
                    <Binding Path="Position.Position.X" RelativeSource="{RelativeSource AncestorType=UserControl}">
                        <Binding.ValidationRules>
                            <validation:TextToNumberValidation NumericType="Float" IsRequired="True" AllowNegative="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox 
                Margin="5"
                Grid.Column="1"
                materialDesign:HintAssist.Hint="Y"
                materialDesign:HintAssist.HelperText="{Binding GamePosition.Y, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <TextBox.Text>
                    <Binding Path="Position.Position.Y" RelativeSource="{RelativeSource AncestorType=UserControl}">
                        <Binding.ValidationRules>
                            <validation:TextToNumberValidation NumericType="Float" IsRequired="True" AllowNegative="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox 
                Margin="5"
                Grid.Column="2"
                materialDesign:HintAssist.Hint="Z"
                materialDesign:HintAssist.HelperText="{Binding GamePosition.Z, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <TextBox.Text>
                    <Binding Path="Position.Position.Z" RelativeSource="{RelativeSource AncestorType=UserControl}">
                        <Binding.ValidationRules>
                            <validation:TextToNumberValidation NumericType="Float" IsRequired="True" AllowNegative="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox 
                Margin="5"
                Grid.Column="3"
                materialDesign:HintAssist.HelperText="Size">
                <TextBox.Text>
                    <Binding Path="Position.Size" RelativeSource="{RelativeSource AncestorType=UserControl}">
                        <Binding.ValidationRules>
                            <validation:TextToNumberValidation NumericType="Float" IsRequired="True" AllowNegative="False"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox 
                Margin="5"
                Grid.Column="4"
                materialDesign:HintAssist.HelperText="Description"
                ToolTip="Optional, helps you remember what a position is for"
                Text="{Binding Position.Description, RelativeSource={RelativeSource AncestorType=UserControl}}"/>

            <Button
                Grid.Column="5"
                Margin="15, 0, 0, 0"
                HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                Command="{Binding CopyGamePositionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                ToolTip="Copy current position from the game">
                <materialDesign:PackIcon
                    Kind="CrosshairsGps"
                    Height="30"
                    Width="30" />
            </Button>
        </Grid>
        

        <!-- Flag ============================================================================================================================================================================================== -->
        <TextBox 
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="0"
            Visibility="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static generic:SplitType.Flag}}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Margin="5"
            materialDesign:HintAssist.Hint="Flag">
            <TextBox.Text>
                <Binding Path="FlagDescription.Flag" RelativeSource="{RelativeSource AncestorType=UserControl}">
                    <Binding.ValidationRules>
                        <validation:TextToNumberValidation NumericType="Uint" IsRequired="True"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBox 
            Grid.Row="{StaticResource RowSplitType}"
            Grid.Column="1"
            Visibility="{Binding SelectedSplitType, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static generic:SplitType.Flag}}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Margin="5"
            ToolTip="Optional, helps you remember what a flag is for"
            materialDesign:HintAssist.Hint="Description"
            Text="{Binding FlagDescription.Description, RelativeSource={RelativeSource AncestorType=UserControl}}"/>



        <!-- row ============================================================================================================================================================================================== -->

        <Button
            Grid.Row="{StaticResource RowAddRemoveSplit}"
            Grid.Column="0"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
            ToolTip="Add a split"
            Command="{Binding AddSplitCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
            <materialDesign:PackIcon
                Kind="Plus"
                Height="30"
                Width="30" />
        </Button>

        <Button
            Grid.Row="{StaticResource RowAddRemoveSplit}"
            Grid.Column="1"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
            ToolTip="Remove selected split"
            Command="{Binding RemoveSplitCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
            <materialDesign:PackIcon
                Kind="Close"
                Height="30"
                Width="30" />
        </Button>

        <!-- row ============================================================================================================================================================================================== -->
        <!-- SelectedItemChanged="TreeView_OnSelectedItemChanged" -->
        <TreeView
            Grid.Row="{StaticResource RowSplitsTree}"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            SelectedItemChanged="TreeView_OnSelectedItemChanged"
            ItemsSource="{Binding SplitsViewModel.Splits, RelativeSource={RelativeSource AncestorType=UserControl}}"
            >
            
            <TreeView.Resources>
                
                <!-- Templates for individual splits -->

                <!-- Enum -->
                <DataTemplate x:Key="EnumTemplate" DataType="{x:Type system:Enum}">
                    <TextBlock Text="{Binding ., Converter={StaticResource EnumDisplayNameConverter}}"/>
                </DataTemplate>

                <!-- Position -->
                <DataTemplate x:Key="VectorSizeTemplate" DataType="{x:Type generic:VectorSize}">
                    <Grid
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBox
                            Margin="5"
                            Grid.Column="0"
                            materialDesign:HintAssist.Hint="X"
                            materialDesign:HintAssist.HelperText="{Binding GamePosition.X, RelativeSource={RelativeSource AncestorType=UserControl}}">
                            <TextBox.Text>
                                <Binding Path="Position.X">
                                    <Binding.ValidationRules>
                                        <validation:TextToNumberValidation NumericType="Float" IsRequired="True" AllowNegative="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox
                            Margin="5"
                            Grid.Column="1"
                            materialDesign:HintAssist.Hint="Y"
                            materialDesign:HintAssist.HelperText="{Binding GamePosition.Y, RelativeSource={RelativeSource AncestorType=UserControl}}">
                            <TextBox.Text>
                                <Binding Path="Position.Y">
                                    <Binding.ValidationRules>
                                        <validation:TextToNumberValidation NumericType="Float" IsRequired="True" AllowNegative="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBox
                            Margin="5"
                            Grid.Column="2"
                            materialDesign:HintAssist.Hint="Z"
                            materialDesign:HintAssist.HelperText="{Binding GamePosition.Z, RelativeSource={RelativeSource AncestorType=UserControl}}">
                            <TextBox.Text>
                                <Binding Path="Position.Z">
                                    <Binding.ValidationRules>
                                        <validation:TextToNumberValidation NumericType="Float" IsRequired="True" AllowNegative="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Grid.Column="3" Text="{Binding Size}" />
                        <TextBox Grid.Column="4" Text="{Binding Description}" />
                    </Grid>
                </DataTemplate>

                <generic:SplitTemplateSelector 
                    EnumTemplate="{StaticResource EnumTemplate}"
                    VectorSizeTemplate="{StaticResource VectorSizeTemplate}"
                    x:Key="SplitTemplateSelector"/>




                <!-- Split timing -->
                <HierarchicalDataTemplate DataType="{x:Type generic:SplitTimingViewModel}" ItemsSource="{Binding Children}">
                    <TextBlock Text="{Binding TimingType, Converter={StaticResource EnumDisplayNameConverter}}"/>
                </HierarchicalDataTemplate>

                <!-- Split type -->
                <HierarchicalDataTemplate DataType="{x:Type generic:SplitTypeViewModel}" ItemsSource="{Binding Children}">
                    <TextBlock Text="{Binding SplitType, Converter={StaticResource EnumDisplayNameConverter}}"/>
                </HierarchicalDataTemplate>

                <!-- Split itself -->
                <HierarchicalDataTemplate DataType="{x:Type generic:SplitViewModel}">
                    <TextBlock Text="{Binding Split, Converter={StaticResource SplitObjectToDescriptionConverter}}"/>

<!--
                    <ContentControl Content="{Binding Split}" ContentTemplateSelector="{StaticResource SplitTemplateSelector}"/>
                    -->
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</UserControl>
