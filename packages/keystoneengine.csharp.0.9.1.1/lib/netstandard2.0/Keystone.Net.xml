<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Keystone.Net</name>
    </assembly>
    <members>
        <member name="T:Keystone.EncodedData">
            <summary>
            Defines an encoded instruction or group of instructions.
            </summary>
        </member>
        <member name="M:Keystone.EncodedData.#ctor(System.Byte[],System.Int32,System.UInt64)">
            <summary>
              Constructs the encoded data.
            </summary>
        </member>
        <member name="P:Keystone.EncodedData.Address">
            <summary>
              Gets the address of the first instruction for this operation.
            </summary>
        </member>
        <member name="P:Keystone.EncodedData.Buffer">
            <summary>
              Gets the result of an assembly operation.
            </summary>
        </member>
        <member name="P:Keystone.EncodedData.StatementCount">
            <summary>
              Gets the number of statements found.
            </summary>
        </member>
        <member name="T:Keystone.Engine">
            <summary>
              Represents a Keystone engine.
            </summary>
        </member>
        <member name="P:Keystone.Engine.ThrowOnError">
            <summary>
              Gets or sets a value that represents whether a <see cref="T:Keystone.KeystoneException" />
              should be thrown on error.
            </summary>
        </member>
        <member name="T:Keystone.Engine.Resolver">
            <summary>
              Delegate for defining symbol resolvers.
            </summary>
            <param name="symbol">Symbol to resolve.</param>
            <param name="value">Address of taid symbol, if found.</param>
            <returns>Whether the symbol was recognized.</returns>
        </member>
        <member name="E:Keystone.Engine.ResolveSymbol">
            <summary>
              Event raised when keystone is resolving a symbol.
            </summary>
            <remarks>This event is only available on Keystone 0.9.2 or higher.</remarks>
        </member>
        <member name="M:Keystone.Engine.ResolveSymbolInternal(System.IntPtr,System.UInt64@)">
            <summary>
              Method used for symbol resolving.
            </summary>
            <param name="symbolPtr">Pointer to the name of the symbol.</param>
            <param name="value">Address of the symbol, if found.</param>
            <returns>Whether the symbol could be recognized.</returns>
        </member>
        <member name="M:Keystone.Engine.#ctor(Keystone.Architecture,Keystone.Mode)">
            <summary>
              Constructs the engine with a given architecture and a given mode.
            </summary>
            <param name="architecture">The target architecture.</param>
            <param name="mode">The mode, i.e. endianness, word size etc.</param>
            <remarks>
              Some architectures are not supported.
              Check with <see cref="M:Keystone.Engine.IsArchitectureSupported(Keystone.Architecture)"/> if the engine
              supports the target architecture.
            </remarks>
        </member>
        <member name="M:Keystone.Engine.SetOption(Keystone.OptionType,System.UInt32)">
            <summary>
              Sets an option in the engine.
            </summary>
            <param name="type">Type of the option.</param>
            <param name="value">Value it the option.</param>
            <returns>Whether the option was correctly set.</returns>
            <exception cref="T:Keystone.KeystoneException">An error encountered when setting the option.</exception>
        </member>
        <member name="M:Keystone.Engine.Assemble(System.String,System.UInt64,System.Int32@,System.Int32@)">
            <summary>
              Encodes the given statement(s).
            </summary>
            <param name="toEncode">String that contains the statements to encode.</param>
            <param name="address">Address of the first instruction to encode.</param>
            <param name="size">Size of the buffer produced by the operation.</param>
            <param name="statementCount">Number of statements found and encoded.</param>
            <returns>Result of the operation, or <c>null</c> if it failed and <see cref="P:Keystone.Engine.ThrowOnError" /> is <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">A null argument was given.</exception>
            <exception cref="T:Keystone.KeystoneException">An error encountered when encoding the instructions.</exception>
        </member>
        <member name="M:Keystone.Engine.Assemble(System.String,System.UInt64)">
            <summary>
              Encodes the given statement(s).
            </summary>
            <param name="toEncode">String that contains the statements to encode.</param>
            <param name="address">Address of the first instruction to encode.</param>
            <returns>Result of the operation, or <c>null</c> if it failed and <see cref="P:Keystone.Engine.ThrowOnError" /> is <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">A null argument was given.</exception>
            <exception cref="T:Keystone.KeystoneException">An error encountered when encoding the instructions.</exception>
        </member>
        <member name="M:Keystone.Engine.Assemble(System.String,System.UInt64,System.Byte[],System.Int32,System.Int32@)">
            <summary>
              Encodes the given statement(s) into the given buffer.
            </summary>
            <param name="toEncode">String that contains the statements to encode.</param>
            <param name="address">Address of the first instruction to encode.</param>
            <param name="buffer">Buffer into which the data shall be written.</param>
            <param name="index">Index into the buffer after which the data shall be written.</param>
            <param name="statementCount">Number of statements found and encoded.</param>
            <returns>Size of the data writen by the operation., or <c>0</c> if it failed and <see cref="P:Keystone.Engine.ThrowOnError" /> is <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">A null argument was given.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided index is invalid.</exception>
            <exception cref="T:Keystone.KeystoneException">An error encountered when encoding the instructions.</exception>
        </member>
        <member name="M:Keystone.Engine.Assemble(System.String,System.UInt64,System.Byte[],System.Int32)">
            <summary>
              Encodes the given statement(s) into the given buffer.
            </summary>
            <param name="toEncode">String that contains the statements to encode.</param>
            <param name="address">Address of the first instruction to encode.</param>
            <param name="buffer">Buffer into which the data shall be written.</param>
            <param name="index">Index into the buffer after which the data shall be written.</param>
            <returns>Size of the data writen by the operation., or <c>0</c> if it failed and <see cref="P:Keystone.Engine.ThrowOnError" /> is <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">A null argument was given.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided index is invalid.</exception>
            <exception cref="T:Keystone.KeystoneException">An error encountered when encoding the instructions.</exception>
        </member>
        <member name="M:Keystone.Engine.Assemble(System.String,System.UInt64,System.IO.Stream,System.Int32@,System.Int32@)">
            <summary>
              Encodes the given statement(s) into the given stream.
            </summary>
            <param name="toEncode">String that contains the statements to encode.</param>
            <param name="address">Address of the first instruction to encode.</param>
            <param name="stream">Buffer into which the data shall be written.</param>
            <param name="size">Size of the buffer produced by the operation.</param>
            <param name="statementCount">Number of statements found and encoded.</param>
            <returns><c>true</c> on success, or <c>false</c> if it failed and <see cref="P:Keystone.Engine.ThrowOnError" /> is <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">A null argument was given.</exception>
            <exception cref="T:Keystone.KeystoneException">An error encountered when encoding the instructions.</exception>
        </member>
        <member name="M:Keystone.Engine.Assemble(System.String,System.UInt64,System.IO.Stream,System.Int32@)">
            <summary>
              Encodes the given statement(s) into the given stream.
            </summary>
            <param name="toEncode">String that contains the statements to encode.</param>
            <param name="address">Address of the first instruction to encode.</param>
            <param name="stream">Buffer into which the data shall be written.</param>
            <param name="size">Size of the buffer produced by the operation.</param>
            <returns><c>true</c> on success, or <c>false</c> if it failed and <see cref="P:Keystone.Engine.ThrowOnError" /> is <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">A null argument was given.</exception>
            <exception cref="T:Keystone.KeystoneException">An error encountered when encoding the instructions.</exception>
        </member>
        <member name="M:Keystone.Engine.Assemble(System.String,System.UInt64,System.IO.Stream)">
            <summary>
              Encodes the given statement(s) into the given stream.
            </summary>
            <param name="toEncode">String that contains the statements to encode.</param>
            <param name="address">Address of the first instruction to encode.</param>
            <param name="stream">Buffer into which the data shall be written.</param>
            <returns><c>true</c> on success, or <c>false</c> if it failed and <see cref="P:Keystone.Engine.ThrowOnError" /> is <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">A null argument was given.</exception>
            <exception cref="T:Keystone.KeystoneException">An error encountered when encoding the instructions.</exception>
        </member>
        <member name="M:Keystone.Engine.GetLastKeystoneError">
            <summary>
              Gets the last error for this instance.
            </summary>
            <returns>The last error code.</returns>
            <remarks>
              It might not retain its old error once accessed.
            </remarks>
        </member>
        <member name="M:Keystone.Engine.ErrorToString(Keystone.KeystoneError)">
            <summary>
              Returns the string associated with a given error code.
            </summary>
        </member>
        <member name="M:Keystone.Engine.IsArchitectureSupported(Keystone.Architecture)">
            <summary>
              Checks if the given architecture is supported.
            </summary>
        </member>
        <member name="M:Keystone.Engine.GetKeystoneVersion(System.UInt32@,System.UInt32@)">
            <summary>
              Gets the version of the engine.
            </summary>
            <param name="major">Major version number.</param>
            <param name="minor">Minor version number.</param>
            <returns>Unique identifier for this version.</returns>
        </member>
        <member name="M:Keystone.Engine.Dispose">
            <summary>
              Releases the engine.
            </summary>
        </member>
        <member name="T:Keystone.KeystoneException">
            <summary>
              Represents an error encountered while encoding one or more instructions.
            </summary>
        </member>
        <member name="P:Keystone.KeystoneException.Error">
            <summary>
              Gets the value that represents the encountered error.
            </summary>
        </member>
        <member name="M:Keystone.KeystoneException.ToString">
            <inheritdoc />
        </member>
        <member name="T:Keystone.NativeInterop">
            <summary>
              Imported symbols for interop with keystone.dll.
            </summary>
        </member>
        <member name="M:Keystone.NativeInterop.#cctor">
            <summary>
            Load the appropriate dynamic-link library, according the architecture of the running application.
            </summary>
            <remarks>
            Taken from: http://stackoverflow.com/questions/10852634/using-a-32bit-or-64bit-dll-in-c-sharp-dllimport
            </remarks>
        </member>
    </members>
</doc>
